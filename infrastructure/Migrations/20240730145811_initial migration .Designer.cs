// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using yasapp.Infrastructure.Data;

#nullable disable

namespace yasapp.Infrastructure.Migrations
{
    [DbContext(typeof(YasappDbContext))]
    [Migration("20240730145811_initial migration ")]
    partial class initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContactModule", b =>
                {
                    b.Property<int>("ContactsId")
                        .HasColumnType("int");

                    b.Property<int>("ModulesId")
                        .HasColumnType("int");

                    b.HasKey("ContactsId", "ModulesId");

                    b.HasIndex("ModulesId");

                    b.ToTable("ContactModule");
                });

            modelBuilder.Entity("ModuleStudent", b =>
                {
                    b.Property<int>("ModulesId")
                        .HasColumnType("int");

                    b.Property<int>("StudentsId")
                        .HasColumnType("int");

                    b.HasKey("ModulesId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("ModuleStudent");
                });

            modelBuilder.Entity("StudentStudyProgram", b =>
                {
                    b.Property<int>("StudentsId")
                        .HasColumnType("int");

                    b.Property<int>("StudyProgramsId")
                        .HasColumnType("int");

                    b.HasKey("StudentsId", "StudyProgramsId");

                    b.HasIndex("StudyProgramsId");

                    b.ToTable("StudentStudyProgram");
                });

            modelBuilder.Entity("yasapp.Domain.Entities.Masterdata.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudyProgramId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StudyProgramId");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("yasapp.Domain.Entities.Masterdata.Examination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("DurationText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Examination");
                });

            modelBuilder.Entity("yasapp.Domain.Entities.Masterdata.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfExamintation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ECTSPointsReached")
                        .HasColumnType("bit");

                    b.Property<int>("ExaminationId")
                        .HasColumnType("int");

                    b.Property<int>("ModuleECTSPoints")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PlannedExamination")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReachedExaminationGrade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudyProgramId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExaminationId");

                    b.HasIndex("StudyProgramId");

                    b.ToTable("Module");
                });

            modelBuilder.Entity("yasapp.Domain.Entities.Masterdata.ModuleItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("ModuleItem");
                });

            modelBuilder.Entity("yasapp.Domain.Entities.Masterdata.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FinishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PlannedEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RealEnd")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RegistrationValidTo")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("StartedAt")
                        .HasColumnType("date");

                    b.Property<string>("StudentMailAdress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("yasapp.Domain.Entities.Masterdata.StudyProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreditPoints")
                        .HasColumnType("int");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Faculty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StudyProgram");
                });

            modelBuilder.Entity("yasapp.Domain.Entities.StudyPlanning.DailyPlanner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserIdent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WeeklyPlannerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("WeeklyPlannerId");

                    b.ToTable("DailyPlanner");
                });

            modelBuilder.Entity("yasapp.Domain.Entities.StudyPlanning.MonthlyPlanning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("StudyMonth")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserIdent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("MonthlyPlanning");
                });

            modelBuilder.Entity("yasapp.Domain.Entities.StudyPlanning.PlannerTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompletedPercentage")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DailyPlannerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PlannedEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PlannedStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Start")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserIdent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DailyPlannerId");

                    b.HasIndex("StudentId");

                    b.ToTable("PlannerTask");
                });

            modelBuilder.Entity("yasapp.Domain.Entities.StudyPlanning.WeeklyPlanner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MonthlyPlanningId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserIdent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("WeekEnd")
                        .HasColumnType("datetime2");

                    b.Property<string>("WeekGoals")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("WeekStart")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MonthlyPlanningId");

                    b.HasIndex("StudentId");

                    b.ToTable("WeeklyPlanner");
                });

            modelBuilder.Entity("ContactModule", b =>
                {
                    b.HasOne("yasapp.Domain.Entities.Masterdata.Contact", null)
                        .WithMany()
                        .HasForeignKey("ContactsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("yasapp.Domain.Entities.Masterdata.Module", null)
                        .WithMany()
                        .HasForeignKey("ModulesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModuleStudent", b =>
                {
                    b.HasOne("yasapp.Domain.Entities.Masterdata.Module", null)
                        .WithMany()
                        .HasForeignKey("ModulesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("yasapp.Domain.Entities.Masterdata.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentStudyProgram", b =>
                {
                    b.HasOne("yasapp.Domain.Entities.Masterdata.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("yasapp.Domain.Entities.Masterdata.StudyProgram", null)
                        .WithMany()
                        .HasForeignKey("StudyProgramsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("yasapp.Domain.Entities.Masterdata.Contact", b =>
                {
                    b.HasOne("yasapp.Domain.Entities.Masterdata.StudyProgram", "StudyProgram")
                        .WithMany()
                        .HasForeignKey("StudyProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudyProgram");
                });

            modelBuilder.Entity("yasapp.Domain.Entities.Masterdata.Module", b =>
                {
                    b.HasOne("yasapp.Domain.Entities.Masterdata.Examination", "KindOfExamination")
                        .WithMany()
                        .HasForeignKey("ExaminationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("yasapp.Domain.Entities.Masterdata.StudyProgram", "StudyProgram")
                        .WithMany("Modules")
                        .HasForeignKey("StudyProgramId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("KindOfExamination");

                    b.Navigation("StudyProgram");
                });

            modelBuilder.Entity("yasapp.Domain.Entities.Masterdata.ModuleItem", b =>
                {
                    b.HasOne("yasapp.Domain.Entities.Masterdata.Module", "Module")
                        .WithMany("ModuleItems")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("yasapp.Domain.Entities.StudyPlanning.DailyPlanner", b =>
                {
                    b.HasOne("yasapp.Domain.Entities.Masterdata.Student", "Student")
                        .WithMany("DailyPlans")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("yasapp.Domain.Entities.StudyPlanning.WeeklyPlanner", null)
                        .WithMany("DailyPlans")
                        .HasForeignKey("WeeklyPlannerId");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("yasapp.Domain.Entities.StudyPlanning.MonthlyPlanning", b =>
                {
                    b.HasOne("yasapp.Domain.Entities.Masterdata.Student", "Student")
                        .WithMany("MonthlyPlannings")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("yasapp.Domain.Entities.StudyPlanning.PlannerTask", b =>
                {
                    b.HasOne("yasapp.Domain.Entities.StudyPlanning.DailyPlanner", "DailyPlanner")
                        .WithMany("Tasks")
                        .HasForeignKey("DailyPlannerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("yasapp.Domain.Entities.Masterdata.Student", "Student")
                        .WithMany("PlannerTasks")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("DailyPlanner");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("yasapp.Domain.Entities.StudyPlanning.WeeklyPlanner", b =>
                {
                    b.HasOne("yasapp.Domain.Entities.StudyPlanning.MonthlyPlanning", null)
                        .WithMany("WeeklyPlans")
                        .HasForeignKey("MonthlyPlanningId");

                    b.HasOne("yasapp.Domain.Entities.Masterdata.Student", "Student")
                        .WithMany("WeeklyPlans")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("yasapp.Domain.Entities.Masterdata.Module", b =>
                {
                    b.Navigation("ModuleItems");
                });

            modelBuilder.Entity("yasapp.Domain.Entities.Masterdata.Student", b =>
                {
                    b.Navigation("DailyPlans");

                    b.Navigation("MonthlyPlannings");

                    b.Navigation("PlannerTasks");

                    b.Navigation("WeeklyPlans");
                });

            modelBuilder.Entity("yasapp.Domain.Entities.Masterdata.StudyProgram", b =>
                {
                    b.Navigation("Modules");
                });

            modelBuilder.Entity("yasapp.Domain.Entities.StudyPlanning.DailyPlanner", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("yasapp.Domain.Entities.StudyPlanning.MonthlyPlanning", b =>
                {
                    b.Navigation("WeeklyPlans");
                });

            modelBuilder.Entity("yasapp.Domain.Entities.StudyPlanning.WeeklyPlanner", b =>
                {
                    b.Navigation("DailyPlans");
                });
#pragma warning restore 612, 618
        }
    }
}
